namespace RapidDoc.Migrations
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Migrations;
    using System.Linq;

    internal sealed class Configuration : DbMigrationsConfiguration<RapidDoc.Models.Infrastructure.ApplicationDbContext>
    {
        public Configuration()
        {
            AutomaticMigrationsEnabled = true;
            ContextKey = "RapidDoc.Models.Infrastructure.ApplicationDbContext";
        }

        protected override void Seed(RapidDoc.Models.Infrastructure.ApplicationDbContext context)
        {
            //  This method will be called after migrating to the latest version.

            //  You can use the DbSet<T>.AddOrUpdate() helper extension method 
            //  to avoid creating duplicate seed data. E.g.
            //
            //    context.People.AddOrUpdate(
            //      p => p.FullName,
            //      new Person { FullName = "Andrew Peters" },
            //      new Person { FullName = "Brice Lambson" },
            //      new Person { FullName = "Rowan Miller" }
            //    );
            //
            /*
            RapidDoc.Models.DomainModels.ApplicationUser user = context.Users.FirstOrDefault(x => x.UserName == "Admin");
            context.ServiceIncidentTable.AddOrUpdate(
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPAccess").Id, Description = "ERP", ServiceName = "ERP", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPDevelop").Id, Description = "ERP", ServiceName = "ERP", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPAccess").Id, Description = "ERP", ServiceName = "ERP", SLAIncident = 2, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPDevelop").Id, Description = "ERP", ServiceName = "ERP", SLAIncident = 2, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPAccess").Id, Description = "ERP", ServiceName = "ERP", SLAIncident = 4, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPDevelop").Id, Description = "ERP", ServiceName = "ERP", SLAIncident = 4, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPAccess").Id, Description = "ERP", ServiceName = "ERP", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPDevelop").Id, Description = "ERP", ServiceName = "ERP", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPAccess").Id, Description = "1Ñ", ServiceName = "1Ñ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPDevelop").Id, Description = "1Ñ", ServiceName = "1Ñ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPAccess").Id, Description = "1Ñ", ServiceName = "1Ñ", SLAIncident = 2, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPDevelop").Id, Description = "1Ñ", ServiceName = "1Ñ", SLAIncident = 2, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPAccess").Id, Description = "1Ñ", ServiceName = "1Ñ", SLAIncident = 4, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPDevelop").Id, Description = "1Ñ", ServiceName = "1Ñ", SLAIncident = 4, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPAccess").Id, Description = "1Ñ", ServiceName = "1Ñ", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorERPDevelop").Id, Description = "1Ñ", ServiceName = "1Ñ", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Äîêóìåíòîîáîðîò", ServiceName = "Äîêóìåíòîîáîðîò", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Äîêóìåíòîîáîðîò", ServiceName = "Äîêóìåíòîîáîðîò", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorLotus").Id, Description = "Äîêóìåíòîîáîðîò", ServiceName = "Äîêóìåíòîîáîðîò", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Äîêóìåíòîîáîðîò", ServiceName = "Äîêóìåíòîîáîðîò", SLAIncident = 2, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Äîêóìåíòîîáîðîò", ServiceName = "Äîêóìåíòîîáîðîò", SLAIncident = 2, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorLotus").Id, Description = "Äîêóìåíòîîáîðîò", ServiceName = "Äîêóìåíòîîáîðîò", SLAIncident = 2, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Äîêóìåíòîîáîðîò", ServiceName = "Äîêóìåíòîîáîðîò", SLAIncident = 4, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Äîêóìåíòîîáîðîò", ServiceName = "Äîêóìåíòîîáîðîò", SLAIncident = 4, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorLotus").Id, Description = "Äîêóìåíòîîáîðîò", ServiceName = "Äîêóìåíòîîáîðîò", SLAIncident = 4, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Äîêóìåíòîîáîðîò", ServiceName = "Äîêóìåíòîîáîðîò", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Äîêóìåíòîîáîðîò", ServiceName = "Äîêóìåíòîîáîðîò", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorLotus").Id, Description = "Äîêóìåíòîîáîðîò", ServiceName = "Äîêóìåíòîîáîðîò", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ôàéëîâûé ñåðâèñ", ServiceName = "Ôàéëîâûé ñåðâèñ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ôàéëîâûé ñåðâèñ", ServiceName = "Ôàéëîâûé ñåðâèñ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ôàéëîâûé ñåðâèñ", ServiceName = "Ôàéëîâûé ñåðâèñ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ôàéëîâûé ñåðâèñ", ServiceName = "Ôàéëîâûé ñåðâèñ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ôàéëîâûé ñåðâèñ", ServiceName = "Ôàéëîâûé ñåðâèñ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ôàéëîâûé ñåðâèñ", ServiceName = "Ôàéëîâûé ñåðâèñ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ôàéëîâûé ñåðâèñ", ServiceName = "Ôàéëîâûé ñåðâèñ", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ôàéëîâûé ñåðâèñ", ServiceName = "Ôàéëîâûé ñåðâèñ", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ôàéëîâûé ñåðâèñ", ServiceName = "Ôàéëîâûé ñåðâèñ", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ôàéëîâûé ñåðâèñ", ServiceName = "Ôàéëîâûé ñåðâèñ", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ôàéëîâûé ñåðâèñ", ServiceName = "Ôàéëîâûé ñåðâèñ", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ôàéëîâûé ñåðâèñ", ServiceName = "Ôàéëîâûé ñåðâèñ", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ïðîãðàììíîå îáåñïå÷åíèå", ServiceName = "Ïðîãðàììíîå îáåñïå÷åíèå", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ïðîãðàììíîå îáåñïå÷åíèå", ServiceName = "Ïðîãðàììíîå îáåñïå÷åíèå", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ïðîãðàììíîå îáåñïå÷åíèå", ServiceName = "Ïðîãðàììíîå îáåñïå÷åíèå", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ïðîãðàììíîå îáåñïå÷åíèå", ServiceName = "Ïðîãðàììíîå îáåñïå÷åíèå", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ïðîãðàììíîå îáåñïå÷åíèå", ServiceName = "Ïðîãðàììíîå îáåñïå÷åíèå", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ïðîãðàììíîå îáåñïå÷åíèå", ServiceName = "Ïðîãðàììíîå îáåñïå÷åíèå", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ïðîãðàììíîå îáåñïå÷åíèå", ServiceName = "Ïðîãðàììíîå îáåñïå÷åíèå", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ïðîãðàììíîå îáåñïå÷åíèå", ServiceName = "Ïðîãðàììíîå îáåñïå÷åíèå", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ïðîãðàììíîå îáåñïå÷åíèå", ServiceName = "Ïðîãðàììíîå îáåñïå÷åíèå", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ïðîãðàììíîå îáåñïå÷åíèå", ServiceName = "Ïðîãðàììíîå îáåñïå÷åíèå", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ïðîãðàììíîå îáåñïå÷åíèå", ServiceName = "Ïðîãðàììíîå îáåñïå÷åíèå", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ïðîãðàììíîå îáåñïå÷åíèå", ServiceName = "Ïðîãðàììíîå îáåñïå÷åíèå", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Èíòåðíåò", ServiceName = "Èíòåðíåò", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Èíòåðíåò", ServiceName = "Èíòåðíåò", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Èíòåðíåò", ServiceName = "Èíòåðíåò", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Èíòåðíåò", ServiceName = "Èíòåðíåò", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Èíòåðíåò", ServiceName = "Èíòåðíåò", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Èíòåðíåò", ServiceName = "Èíòåðíåò", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Èíòåðíåò", ServiceName = "Èíòåðíåò", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Èíòåðíåò", ServiceName = "Èíòåðíåò", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Èíòåðíåò", ServiceName = "Èíòåðíåò", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Èíòåðíåò", ServiceName = "Èíòåðíåò", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Èíòåðíåò", ServiceName = "Èíòåðíåò", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Èíòåðíåò", ServiceName = "Èíòåðíåò", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ýëåêòðîííàÿ ïî÷òà", ServiceName = "Ýëåêòðîííàÿ ïî÷òà", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ýëåêòðîííàÿ ïî÷òà", ServiceName = "Ýëåêòðîííàÿ ïî÷òà", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ýëåêòðîííàÿ ïî÷òà", ServiceName = "Ýëåêòðîííàÿ ïî÷òà", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ýëåêòðîííàÿ ïî÷òà", ServiceName = "Ýëåêòðîííàÿ ïî÷òà", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ýëåêòðîííàÿ ïî÷òà", ServiceName = "Ýëåêòðîííàÿ ïî÷òà", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ýëåêòðîííàÿ ïî÷òà", ServiceName = "Ýëåêòðîííàÿ ïî÷òà", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ýëåêòðîííàÿ ïî÷òà", ServiceName = "Ýëåêòðîííàÿ ïî÷òà", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ýëåêòðîííàÿ ïî÷òà", ServiceName = "Ýëåêòðîííàÿ ïî÷òà", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ýëåêòðîííàÿ ïî÷òà", ServiceName = "Ýëåêòðîííàÿ ïî÷òà", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ýëåêòðîííàÿ ïî÷òà", ServiceName = "Ýëåêòðîííàÿ ïî÷òà", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ýëåêòðîííàÿ ïî÷òà", ServiceName = "Ýëåêòðîííàÿ ïî÷òà", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ýëåêòðîííàÿ ïî÷òà", ServiceName = "Ýëåêòðîííàÿ ïî÷òà", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTS_RADIO").Id, Description = "Ðàäèîñâÿçü", ServiceName = "Ðàäèîñâÿçü", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "AdministratorCTS").Id, Description = "Ðàäèîñâÿçü", ServiceName = "Ðàäèîñâÿçü", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTS_RADIO").Id, Description = "Ðàäèîñâÿçü", ServiceName = "Ðàäèîñâÿçü", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "AdministratorCTS").Id, Description = "Ðàäèîñâÿçü", ServiceName = "Ðàäèîñâÿçü", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTS_RADIO").Id, Description = "Ðàäèîñâÿçü", ServiceName = "Ðàäèîñâÿçü", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "AdministratorCTS").Id, Description = "Ðàäèîñâÿçü", ServiceName = "Ðàäèîñâÿçü", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTS_RADIO").Id, Description = "Ðàäèîñâÿçü", ServiceName = "Ðàäèîñâÿçü", SLAIncident = 12, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "AdministratorCTS").Id, Description = "Ðàäèîñâÿçü", ServiceName = "Ðàäèîñâÿçü", SLAIncident = 12, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTS_PHONE").Id, Description = "Òåëåôîííàÿ ñâÿçü", ServiceName = "Òåëåôîííàÿ ñâÿçü", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "AdministratorCTS").Id, Description = "Òåëåôîííàÿ ñâÿçü", ServiceName = "Òåëåôîííàÿ ñâÿçü", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTS_PHONE").Id, Description = "Òåëåôîííàÿ ñâÿçü", ServiceName = "Òåëåôîííàÿ ñâÿçü", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "AdministratorCTS").Id, Description = "Òåëåôîííàÿ ñâÿçü", ServiceName = "Òåëåôîííàÿ ñâÿçü", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTS_PHONE").Id, Description = "Òåëåôîííàÿ ñâÿçü", ServiceName = "Òåëåôîííàÿ ñâÿçü", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "AdministratorCTS").Id, Description = "Òåëåôîííàÿ ñâÿçü", ServiceName = "Òåëåôîííàÿ ñâÿçü", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTS_PHONE").Id, Description = "Òåëåôîííàÿ ñâÿçü", ServiceName = "Òåëåôîííàÿ ñâÿçü", SLAIncident = 12, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "AdministratorCTS").Id, Description = "Òåëåôîííàÿ ñâÿçü", ServiceName = "Òåëåôîííàÿ ñâÿçü", SLAIncident = 12, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Âèäåî êîíôåðåíöèÿ", ServiceName = "Âèäåî êîíôåðåíöèÿ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Âèäåî êîíôåðåíöèÿ", ServiceName = "Âèäåî êîíôåðåíöèÿ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Âèäåî êîíôåðåíöèÿ", ServiceName = "Âèäåî êîíôåðåíöèÿ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Âèäåî êîíôåðåíöèÿ", ServiceName = "Âèäåî êîíôåðåíöèÿ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Âèäåî êîíôåðåíöèÿ", ServiceName = "Âèäåî êîíôåðåíöèÿ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Âèäåî êîíôåðåíöèÿ", ServiceName = "Âèäåî êîíôåðåíöèÿ", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Âèäåî êîíôåðåíöèÿ", ServiceName = "Âèäåî êîíôåðåíöèÿ", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Âèäåî êîíôåðåíöèÿ", ServiceName = "Âèäåî êîíôåðåíöèÿ", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Âèäåî êîíôåðåíöèÿ", ServiceName = "Âèäåî êîíôåðåíöèÿ", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Âèäåî êîíôåðåíöèÿ", ServiceName = "Âèäåî êîíôåðåíöèÿ", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Âèäåî êîíôåðåíöèÿ", ServiceName = "Âèäåî êîíôåðåíöèÿ", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Âèäåî êîíôåðåíöèÿ", ServiceName = "Âèäåî êîíôåðåíöèÿ", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTS_ATC").Id, Description = "Àóäèî êîíôåðåíöñâÿçü", ServiceName = "Àóäèî êîíôåðåíöñâÿçü", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "AdministratorCTS").Id, Description = "Àóäèî êîíôåðåíöñâÿçü", ServiceName = "Àóäèî êîíôåðåíöñâÿçü", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTS_ATC").Id, Description = "Àóäèî êîíôåðåíöñâÿçü", ServiceName = "Àóäèî êîíôåðåíöñâÿçü", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "AdministratorCTS").Id, Description = "Àóäèî êîíôåðåíöñâÿçü", ServiceName = "Àóäèî êîíôåðåíöñâÿçü", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTS_ATC").Id, Description = "Àóäèî êîíôåðåíöñâÿçü", ServiceName = "Àóäèî êîíôåðåíöñâÿçü", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "AdministratorCTS").Id, Description = "Àóäèî êîíôåðåíöñâÿçü", ServiceName = "Àóäèî êîíôåðåíöñâÿçü", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTS_ATC").Id, Description = "Àóäèî êîíôåðåíöñâÿçü", ServiceName = "Àóäèî êîíôåðåíöñâÿçü", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "AdministratorCTS").Id, Description = "Àóäèî êîíôåðåíöñâÿçü", ServiceName = "Àóäèî êîíôåðåíöñâÿçü", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ñåðâèñ ïå÷àòè", ServiceName = "Ñåðâèñ ïå÷àòè", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ñåðâèñ ïå÷àòè", ServiceName = "Ñåðâèñ ïå÷àòè", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ñåðâèñ ïå÷àòè", ServiceName = "Ñåðâèñ ïå÷àòè", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ñåðâèñ ïå÷àòè", ServiceName = "Ñåðâèñ ïå÷àòè", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ñåðâèñ ïå÷àòè", ServiceName = "Ñåðâèñ ïå÷àòè", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ñåðâèñ ïå÷àòè", ServiceName = "Ñåðâèñ ïå÷àòè", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ñåðâèñ ïå÷àòè", ServiceName = "Ñåðâèñ ïå÷àòè", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ñåðâèñ ïå÷àòè", ServiceName = "Ñåðâèñ ïå÷àòè", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ñåðâèñ ïå÷àòè", ServiceName = "Ñåðâèñ ïå÷àòè", SLAIncident = 3, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Ñåðâèñ ïå÷àòè", ServiceName = "Ñåðâèñ ïå÷àòè", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Ñåðâèñ ïå÷àòè", ServiceName = "Ñåðâèñ ïå÷àòè", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorSysAdmin").Id, Description = "Ñåðâèñ ïå÷àòè", ServiceName = "Ñåðâèñ ïå÷àòè", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.TwoLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Îðãòåõíèêà", ServiceName = "Îðãòåõíèêà", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Îðãòåõíèêà", ServiceName = "Îðãòåõíèêà", SLAIncident = 1, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Critical, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Îðãòåõíèêà", ServiceName = "Îðãòåõíèêà", SLAIncident = 2, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Îðãòåõíèêà", ServiceName = "Îðãòåõíèêà", SLAIncident = 2, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.High, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Îðãòåõíèêà", ServiceName = "Îðãòåõíèêà", SLAIncident = 4, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Îðãòåõíèêà", ServiceName = "Îðãòåõíèêà", SLAIncident = 4, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Medium, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP").Id, Description = "Îðãòåõíèêà", ServiceName = "Îðãòåõíèêà", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element1 },
                new RapidDoc.Models.DomainModels.ServiceIncidentTable { ApplicationUserCreatedId = user.Id, ApplicationUserModifiedId = user.Id, CompanyTableId = user.CompanyTableId, CreatedDate = DateTime.UtcNow, ModifiedDate = DateTime.UtcNow, RoleTableId = context.Roles.FirstOrDefault(x => x.Name == "ExecutorCTP_ZIF").Id, Description = "Îðãòåõíèêà", ServiceName = "Îðãòåõíèêà", SLAIncident = 8, ServiceIncidientLevel = Models.Repository.ServiceIncidientLevel.OneLevel, ServiceIncidientPriority = Models.Repository.ServiceIncidientPriority.Low, ServiceIncidientLocation = Models.Repository.ServiceIncidientLocation.Element2 }
            );
            */
        }
    }
}
