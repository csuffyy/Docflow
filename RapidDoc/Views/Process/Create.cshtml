@model RapidDoc.Models.ViewModels.ProcessView
@using RapidDoc.Extensions;

@{
    ViewBag.Title = UIElementRes.UIElement.CreateProcess;
}

<h2>@UIElementRes.UIElement.CreateProcess</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend></legend>

        <div class="editor-label">
            @Html.LabelForRequired(model => model.ProcessName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ProcessName, new { @class = "form-control", @size = 70, @maxlength = 70, placeholder = "IT Incident", @autofocus = "required", @x_webkit_speech = "" })
            @Html.ValidationMessageFor(model => model.ProcessName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control", @size = 256, @maxlength = 256, placeholder = "Incident Management", @x_webkit_speech = "" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelForRequired(model => model.GroupProcessName)
        </div>
        <div class="editor-field">
            @Html.DropDownList("GroupProcessTableId", (IEnumerable<SelectListItem>)ViewBag.GroupProcessList, new { @class = "selectpicker", @data_live_search = "true", @data_size = "10" })
            @Html.ValidationMessageFor(model => model.GroupProcessTableId)
        </div>

        <div class="editor-label">
            @Html.LabelForRequired(model => model.WorkScheduleName)
        </div>
        <div class="editor-field">
            @Html.DropDownList("WorkScheduleTableId", (IEnumerable<SelectListItem>)ViewBag.WorkScheduleList, new { @class = "selectpicker", @data_live_search = "true", @data_size = "10" })
            @Html.ValidationMessageFor(model => model.WorkScheduleTableId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TableName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.TableName, new { @class = "form-control", @size = 256, @maxlength = 256, placeholder = "USR_REQ_IT_INCIDENT" })
            @Html.ValidationMessageFor(model => model.TableName)
        </div>

        <div class="editor-label">
            @Html.LabelForRequired(model => model.RoleName)
        </div>
        <div class="editor-field">
            @Html.DropDownList("RoleId", (IEnumerable<SelectListItem>)ViewBag.RolesList, new { @class = "selectpicker", @data_live_search = "true", @data_size = "10" })
        </div>

        <div class="editor-label">
            @Html.LabelForRequired(model => model.StartReaderRoleName)
        </div>
        <div class="editor-field">
            @Html.DropDownList("StartReaderRoleId", (IEnumerable<SelectListItem>)ViewBag.StartReaderRolesList, new { @class = "selectpicker", @data_live_search = "true", @data_size = "10" })
        </div>

        <div class="editor-label">
            @Html.LabelForRequired(model => model.AfterEndRoleName)
        </div>
        <div class="editor-field">
            @Html.DropDownList("AfterEndReaderRoleId", (IEnumerable<SelectListItem>)ViewBag.AfterEndRolesList, new { @class = "selectpicker", @data_live_search = "true", @data_size = "10" })
        </div>

        <div class="editor-label">
            @Html.LabelForRequired(model => model.DocType)
        </div>
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => model.DocType, new { @class = "selectpicker" })
        </div>

        <br>
        <blockquote>
            <p>@UIElementRes.UIElement.CreateWorkTimeHint</p>
        </blockquote>
        <div class="editor-label">
            @Html.LabelForRequired(model => model.StartWorkTime)
        </div>
        <div class="bootstrap-timepicker editor-field">
            @Html.TextBoxFor(model => model.StartWorkTime, new { @class = "timepicker" })
            <span class="add-on"><i class="glyphicon glyphicon-time"></i></span>
            @Html.ValidationMessageFor(model => model.StartWorkTime)
        </div>

        <div class="editor-label">
            @Html.LabelForRequired(model => model.EndWorkTime)
        </div>
        <div class="bootstrap-timepicker editor-field">
            @Html.TextBoxFor(model => model.EndWorkTime, new { @class = "timepicker" })
            <span class="add-on"><i class="glyphicon glyphicon-time"></i></span>
            @Html.ValidationMessageFor(model => model.EndWorkTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MandatoryFileTypes)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.MandatoryFileTypes, new { @class = "form-control", @size = 256, @maxlength = 256, placeholder = ".PDF|.DOC|.XLS" })
            @Html.ValidationMessageFor(model => model.MandatoryFileTypes)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DocSize)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.DocSize, new { @class = "form-control bfh-number" })
            @Html.ValidationMessageFor(model => model.DocSize)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MandatoryDocDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.MandatoryDocDate, new { @class = "datetimepicker form-control form-control-date", startDate = "" })
            @Html.ValidationMessageFor(model => model.MandatoryDocDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MandatoryNumberFiles)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.MandatoryNumberFiles, new { @class = "form-control bfh-number" })
            @Html.ValidationMessageFor(model => model.MandatoryNumberFiles)
        </div>
        @{Html.RenderPartial("SaveBackBtn");}
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/editentity")
}
@section jslaunch {
<script type="text/javascript">
$(function () {
    selectpicker_init();
    timepicker_init();
    datetimepicker_init("@UIElementRes.UIElement.LangName");
});
</script>
}