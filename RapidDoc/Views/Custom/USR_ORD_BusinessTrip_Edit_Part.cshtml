@model RapidDoc.Models.ViewModels.USR_ORD_BusinessTrip_View
@using RapidDoc.Extensions;

@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.DocumentTableId)
@Html.HiddenFor(model => model.NeedTranslate)
@Html.HiddenFor(model => model.ListAgreement)
@Html.HiddenFor(model => model.ListSubcription)
@Html.HiddenFor(model => model.AddReaders)
@Html.HiddenFor(model => model.AddAttachment)
@Html.HiddenFor(model => model.CountDays)
@Html.HiddenFor(model => model.Subject)
@Html.HiddenFor(model => model.SignName)

<h4>Ввод работников:</h4>

<div id="CompanyW">
    @Html.TextBox("CompanyWorker", "", new { @class = "form-control", @data_role = "tagsinputEmplOne1", @size = 256, placeholder = "Работник" })
</div>
<br />
<div id="CustomW">
    <div class="row">
        <div class="col-xs-4">
            <div class="editor-field">
                @Html.TextBox("FIO", "", new { @class = "form-control", placeholder = "ФИО" })
            </div>
        </div>

        <div class="col-xs-4">
            <div class="editor-field">
                @Html.TextBox("Title", "", new { @class = "form-control", placeholder = "Должность" })
            </div>
        </div>

        <div class="col-xs-4">
            <div class="editor-field">
                @Html.TextBox("Department", "", new { @class = "form-control", placeholder = "Подразделение" })
            </div>
        </div>
    </div>
</div>
<br />
<div class="editor-field">
    <button type="button" id="addUser" class="btn btn-default btn-sm">@UIElementRes.UIElement.AddUsers</button>
</div>

<br />
<div class="alert_placeholderWorker"></div>


<div class="editor-label">
    @Html.LabelForRequired(model => Model.Workers)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => Model.Workers, new { @class = "form-control", @data_role = "tagsinput", placeholder = "Работник", @autofocus = "required" })
</div>
<hr />
<h4>Сроки командировки:</h4>
<div class="row">
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.StartDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.StartDate, "{0:dd.MM.yyyy}", new { @class = "datepicker form-control", placeholder = "c", startDate = "" })
        </div>
    </div>
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.EndDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.EndDate, "{0:dd.MM.yyyy}", new { @class = "datepicker form-control", placeholder = "по", startDate = "" })
        </div>
    </div>
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.CountDays)
        </div>
        <div id="diffdays"></div>
    </div>
</div>
<br />
<div class="alert_placeholderDate"></div>

<div class="row">
    <div class="col-xs-3">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.BusinessTripType)
        </div>
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => Model.BusinessTripType, new { @class = "selectpickerfull" })
        </div>
    </div>
    <div class="col-xs-3">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.BusinessTripCategory)
        </div>
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => Model.BusinessTripCategory, new { @class = "selectpickerfull" })
        </div>
    </div>
</div>

<div class="editor-label">
    @Html.LabelForRequired(model => Model.GoalTrip)
</div>
<div class="editor-field">
    @Html.TextAreaFor(model => Model.GoalTrip, new { @class = "form-control", @row = 2, placeholder = "Цель командировки" })
</div>

<div class="row">
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => model.CountryTableId)
        </div>
        @Html.Action("GetCountryORD", "Custom", new {@id = Model.CountryTableId })
    </div>
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Country)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.Country, new { @class = "form-control", placeholder = "Опционально" })
        </div>
    </div>
</div>
<div class="editor-label">
    @Html.LabelForRequired(model => Model.BusinessTripDestination)
</div>
<div class="editor-field">
    @Html.EnumDropDownListFor(model => Model.BusinessTripDestination, new { @class = "selectpicker" })
</div>

<div class="row">
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.BusinessTrip_Plane)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.BusinessTrip_Plane)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.BusinessTrip_Train)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.BusinessTrip_Train)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.BusinessTrip_Car)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.BusinessTrip_Car)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.BusinessTrip_Boat)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.BusinessTrip_Boat)
        </div>
    </div>

</div>
<div class="row">
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => model.OrganizationTableId)
        </div>
        <div class="editor-field">
            @Html.Action("GetOrganizationORD", "Custom", new { @id = Model.OrganizationTableId })
        </div>
    </div>
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Organization)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.Organization, new { @class = "form-control", placeholder = "Опционально" })
        </div>
    </div>
</div>
<hr />
<h4>Оплата:</h4>
<div class="editor-label">
    @Html.LabelForRequired(model => Model.Transit)
</div>
<div class="editor-field">
    @Html.EnumDropDownListFor(model => Model.Transit, new { @class = "selectpicker" })
</div>
<div class="editor-label">
    @Html.LabelForRequired(model => Model.Accommodation)
</div>
<div class="editor-field">
    @Html.EnumDropDownListFor(model => Model.Accommodation, new { @class = "selectpicker" })
</div>
<div class="editor-label">
    @Html.LabelForRequired(model => Model.Money)
</div>
<div class="editor-field">
    @Html.EnumDropDownListFor(model => Model.Money, new { @class = "selectpicker" })
</div>
<div class="editor-label">
    @Html.LabelForRequired(model => Model.VisaRequired)
</div>
<div class="editor-field">
    @Html.CheckBoxFor(model => model.VisaRequired)
</div>
<hr />

<div class="row">
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.OrderDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.OrderDate, "{0:dd.MM.yyyy}", new { @class = "datepicker form-control", data_date_format = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern.ToLower(), placeholder = "Дата приказа", startDate = "" })
        </div>
    </div>
    <div class="col-xs-10">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.CancelOrder)
        </div>
        <div class="editor-field">
            <div class="row">
                <div class="col-xs-2">
                    <div class="editor-field">
                        @Html.CheckBoxFor(model => model.CancelOrder)
                    </div>
                </div>
                <div class="col-xs-10">
                    <div class="editor-field">
                        @Html.Action("GetRevocationORD", "Custom", new { id = Model.CancelDocumentId, edit = true })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Addition)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Addition)
        </div>
    </div>
    <div id="additiontextid" style="visibility: hidden">
        <div class="col-xs-10">
            <div class="editor-label">
                @Html.LabelForRequired(model => Model.Addition)
            </div>
            @Html.Action("GetAdditionORD", "Custom", new { id = Model.AdditionDocumentId, edit = true })
        </div>
    </div>
</div>
<div class="editor-label">
    @Html.LabelFor(model => Model.ListSubcription)
</div>
<div class="editor-field">
    @Html.HtmlDisplayTagsFor(model => Model.ListSubcription)
</div>
<hr />
<h4>БҰЙРЫҚ</h4>
<div class="editor-field">
    @Html.TextAreaFor(model => Model.MainField, new { @class = "form-control summernote" })
</div>
<h4>ПРИКАЗ</h4>
<div class="editor-field">
    @Html.TextAreaFor(model => Model.MainFieldTranslate, new { @class = "form-control summernote" })
</div>
<div class="editor-label">
    @Html.LabelForRequired(model => Model.ListFileName)
</div>
<div class="editor-field">
    @Html.TextAreaFor(model => Model.ListFileName, new { @class = "form-control", placeholder = "Приложения" })
</div>

<div class="editor-label">
    @Html.LabelForRequired(model => Model.Sign)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => Model.Sign, new { @class = "form-control", @data_role = "tagsinputEmplOne", @size = 256, placeholder = "Подпись" })
</div>
<div class="editor-label">
    @Html.LabelForRequired(model => Model.SignTitle)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => Model.SignTitle, new { @class = "form-control", @size = 256, placeholder = "Подпись должность" })
</div>

<script type="text/javascript">
    $(function () {
        if ($('#CountryTableId').val() != '') 
            $('#Country')[0].disabled = true;

        if ($('#OrganizationTableId').val() != '') 
            $('#Organization')[0].disabled = true;

        @if(Model.CancelOrder == false)
        {
            <text>
        var buttoncancelorderstatus = true;
        </text>
        }
        else
        {
            <text>
        var buttoncancelorderstatus = false;
        document.getElementById('buttoncancelorder').style.visibility = 'visible';
        </text>
        }

        @if(Model.Addition == false)
        {
            <text>
            var buttonadditionorderstatus = true;
            </text>
        }
        else
        {
            <text>
            var buttonadditionorderstatus = false;
            document.getElementById('additiontextid').style.visibility = 'visible';
            </text>
        }

        $('#CancelOrder').click(function (event) {
            buttoncancelorderstatus = !buttoncancelorderstatus;
            if (buttoncancelorderstatus) {
                document.getElementById('buttoncancelorder').style.visibility = 'hidden';
            } else {
                document.getElementById('buttoncancelorder').style.visibility = 'visible';
            }
        });

        $('#Addition').click(function (event) {
            buttonadditionorderstatus = !buttonadditionorderstatus;
            if (buttonadditionorderstatus) {
                document.getElementById('additiontextid').style.visibility = 'hidden';
            } else {
                document.getElementById('additiontextid').style.visibility = 'visible';
            }
        });

        $('#diffdays').html($('#CountDays').val());

        $("[id*='Date']").change(function (event) {
            var pattern = /(\d{2})\.(\d{2})\.(\d{4})/;
            var startDate = new Date($("#StartDate").val().replace(pattern, '$3-$2-$1'));
            var endDate = new Date($("#EndDate").val().replace(pattern, '$3-$2-$1'));
            var diffDays = parseInt((endDate - startDate) / (1000 * 60 * 60 * 24)) + 1;

            if (startDate != null && endDate != null) {
                if (diffDays <= 0) {
                    $('.alert_placeholderDate').html('<div class="alert alert-danger" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span><span class="sr-only">Error:</span>' + " Введите корректно даты коммандировки" + '</div>');
                    $('#diffdays').html("");
                    $('#CountDays').val(0);
                } else {
                    $('.alert_placeholderDate').html("");
                    $('#CountDays').val(diffDays);
                    $('#diffdays').html(diffDays);
                }
            }
        });

        $('#FIO').change(function (event) {
            if ($('#FIO').val() == '' && $('#Department').val() == '' && $('#Title').val() == '') {
                $('#CompanyW').show();
            }
            else {
                $('#CompanyW').hide();
                $('input[data-role=tagsinputEmplOne1]').tagsinput('removeAll');
            }
        });

        $('#CompanyWorker').change(function (event) {
            if ($('#CompanyWorker').val() == '') {
                $('#CustomW').show();
            }
            else {
                $('#CustomW').hide();
                $('#FIO').val('');
                $('#Department').val('');
                $('#Title').val('');
            }
        });

        $('#addUser').click(function (event) {
            event.preventDefault();
            $('.alert_placeholderWorker').html("");
            var value = $('#CompanyWorker').val();
            if ($('#CompanyWorker').val() == '') {
                if ($('#FIO').val() == '' || $('#Department').val() == '' || $('#Title').val() == '') {
                    $('.alert_placeholderWorker').html('<div class="alert alert-danger" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span><span class="sr-only">Error:</span>' + " Не обходио ввести полные данные о сотруднике(ФИО-Подразделение-Должность)" + '</div>');
                }
                else {
                    $('input[data-role=tagsinput]').tagsinput('add', $('#FIO').val() + " - " + $('#Title').val() + " - " + $('#Department').val());

                    $('#FIO').val('');
                    $('#Department').val('');
                    $('#Title').val('');
                    $('#CompanyW').show();
                    $('#userlist').show();
                }
            }
            else {
                $('#userlist').show();
                var pattern = /\b[a-f\d-]{36}\b,/;
                var result = value.replace(pattern, "");
                $('input[data-role=tagsinput]').tagsinput('add', result);
                $('input[data-role=tagsinputEmplOne1]').tagsinput('removeAll');
            }
        });

        $('#CountryTableId').change(function (event) {
            if ($('#CountryTableId').val() == '') {
                $('#Country')[0].disabled = false;
            }
            else {
                $('#Country')[0].disabled = true;
                $('#Country').val('');
            }
        });

        $('#OrganizationTableId').change(function (event) {
            if ($('#OrganizationTableId').val() == '') {
                $('#Organization')[0].disabled = false;
            }
            else {
                $('#Organization')[0].disabled = true;
                $('#Organization').val('');
            }
        });
    });
</script>