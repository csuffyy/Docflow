@model RapidDoc.Models.ViewModels.USK_IND_IncomingDocuments_View
@using RapidDoc.Extensions;
@using RapidDoc.Models.Repository;
@{
    Model.OutgoingDate = Model.OutgoingDate ?? DateTime.Today;
    Model.RegistrationDate = Model.RegistrationDate ?? DateTime.Today;
    Model.ExecutionDate = Model.ExecutionDate ?? DateTime.Today.AddMonths(1);
}

<div class="row">
    <div class="col-xs-8">
        <div class="editor-label">
            @Html.LabelFor(model => model.ItemCauseNumber)
        </div>
        <div class="row">
            <div class="col-xs-2">
                <div class="editor-field">
                    <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target=".itemcause-modal">@UIElementRes.UIElement.Choose...</button>
                </div>
            </div>
            <div class="col-xs-10">
                @Html.HiddenFor(model => Model.ItemCauseTableId)
                @Html.HiddenFor(model => Model.ItemCauseNumber, new { id = "ItemCauseNumberTextId" })
                <span id="ItemCauseNumber">@Html.DisplayTextFor(model => Model.ItemCauseNumber)</span>
            </div>
        </div>
    </div>
</div>
<h4>Язык обращения:</h4>
<div class="row">
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Language_Kazakh)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Language_Kazakh)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Language_Russian)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Language_Russian)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Language_English)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Language_English)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Language_Chinese)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Language_Chinese)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Language_French)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Language_French)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Language_Other)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Language_Other)
        </div>
    </div>
</div>

<br />
<div class="row">
    @if (Model.IncomingDocNum != null)
    {
        @Html.HiddenFor(model => model.IncomingDocNum)
        <div class="col-xs-4">
            <div class="editor-label">
                @Html.LabelForRequired(model => Model.IncomingDocNum)
            </div>
            <div class="editor-field">
                @Html.DisplayTextFor(model => Model.IncomingDocNum)
            </div>
        </div>
    }
    else
    {
        <div class="col-xs-4">
            <div class="editor-label">
                @Html.LabelForRequired(model => Model.NumberSeriesBookingTableId)
            </div>
            <div class="editor-field">
                @Html.Action("GetBookingIncomingDoc", "Custom", new { type = Model.GetType() })
            </div>
        </div>
    }
</div>

<div class="row">
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => model.OrganizationTableId)
        </div>
        <div class="editor-field">
            @Html.Action("GetOrganizationORD", "Custom", new { @id = Model.OrganizationTableId })
        </div>
    </div>
    <div class="col-xs-8">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Receiver)
        </div>
        <div>
            @Html.TextBoxFor(model => Model.Receiver, new { @class = "form-control", @data_role = "tagsinputEmplIntercompany", @size = 256, placeholder = "Получатель" })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.OutgoingNumber)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.OutgoingNumber, new { @class = "form-control", placeholder = "Исходящий номер" })
        </div>
    </div>
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.OutgoingDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.OutgoingDate, "{0:dd.MM.yyyy}", new { @class = "datepicker form-control", startDate = "" })
        </div>
    </div> 
</div>

<div class="row">
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.RegistrationDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.RegistrationDate, "{0:dd.MM.yyyy}", new { @class = "datepicker form-control", startDate = "" })
        </div>
    </div>
    <div class="col-xs-8">
        <div id="dublicateBlock"></div>
    </div>
</div>
<hr />

<div class="editor-label">
    @Html.LabelForRequired(model => Model.ControlType)
</div>
<div class="editor-field">
    @Html.EnumDropDownListFor(model => Model.ControlType, new { @class = "selectpicker" })
</div>
<div class="editor-label">
    @Html.LabelForRequired(model => Model.Priority)
</div>
<div class="editor-field">
    @Html.EnumDropDownListFor(model => Model.Priority, new { @class = "selectpicker" })
</div>
<div class="editor-label">
    @Html.LabelForRequired(model => Model.ExecutionDate)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => Model.ExecutionDate, "{0:dd.MM.yyyy}", new { @class = "datepicker form-control form-control-date", startDate = "" })
</div>
<br />
<div class="editor-label">
    @Html.LabelForRequired(model => Model.OutcomingNumberDocId)
</div>
<div class="editor-field">
    @Html.Action("GetOutcomingDocKZH", "Custom", new { @id = Model.OutcomingNumberDocId })
</div>
<br />
<div class="row">
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.NatureQuestion):
        </div>
    </div>
    <div class="col-xs-3">
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => Model.NatureQuestionType, new { @class = "selectpickerfull"})           
        </div>
    </div>
    <div class="col-xs-4">
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.NatureQuestion, new { @class = "form-control", placeholder = "Другое" })
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.DocumentType):
        </div>
    </div>
    <div class="col-xs-3">
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => Model.DocumentType, new { @class = "selectpickerfull" })
        </div>
    </div>
    <div class="col-xs-4">
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.DocumentTypeName, new { @class = "form-control", placeholder = "Другое" })
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.AdmissionMethodType):
        </div>
    </div>
    <div class="col-xs-3">
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => Model.AdmissionMethodType, new { @class = "selectpickerfull" })
        </div>
    </div>
</div>

<hr />
<div class="editor-label">
    @Html.LabelForRequired(model => Model.ListsCount)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => Model.ListsCount, new { @class = "form-control", placeholder = "Количество листов" })
</div>

<div class="editor-label">
    @Html.LabelForRequired(model => Model.ApplicationsCount)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => Model.ApplicationsCount, new { @class = "form-control", placeholder = "Количество приложений" })
</div>

<div class="editor-label">
    @Html.LabelForRequired(model => Model.DocumentSubject)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => Model.DocumentSubject, new { @class = "form-control", placeholder = "Тема документа" })
</div>

<div class="editor-label">
    @Html.LabelForRequired(model => Model.ListReaders)
</div>
<div>
    @Html.TextBoxFor(model => Model.ListReaders, new { @class = "form-control", @data_role = "tagsinputEmplIntercompany1", placeholder = "Читатели" })
</div>

<div class="modal itemcause-modal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sidebar">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">@CustomRes.Custom.ItemCause</h4>
            </div>
            <div class="modal-body" style="min-height:700px;">
                @Html.Action("ItemCausesListLookup", "ItemCause")
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $('.itemcauseslink').click(function (event) {
            var element = $(event.target);
            $('#ItemCauseTableId').val(element.attr('data-itemid'));
            $('#ItemCauseNumber').text(element.text());
            $('#ItemCauseNumberTextId').val(element.text());
        });

        $('#NatureQuestionType').change(function (event) {
            if ($('#NatureQuestionType').val() == 0) {
                $('#NatureQuestion')[0].disabled = false;
            }
            else {
                $('#NatureQuestion')[0].disabled = true;
                $('#NatureQuestion').val("");
            }
        });

        $('#DocumentType').change(function (event) {
            var amount = $('#DocumentType').val();
            if ($('#DocumentType').val() == 0) {
                $('#DocumentTypeName')[0].disabled = false;
            }
            else {
                $('#DocumentTypeName')[0].disabled = true;
                $('#DocumentTypeName').val("");
            }
        });

        $("#OrganizationTableId").change(function () {
            checkIncomeDoc();
        });

        $('#OutgoingNumber').on('blur', function () {
            checkIncomeDoc();
        });

        var outgoingDateCount = 0;
        $("#OutgoingDate").change(function () {
            if (outgoingDateCount == 0) {
                checkIncomeDoc();
                outgoingDateCount = 0;
            }
            outgoingDateCount = 1;
        });
    });
</script>