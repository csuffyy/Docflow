@model RapidDoc.Models.ViewModels.USR_OND_OutcomingDocuments_View
@using RapidDoc.Extensions;
@using RapidDoc.Models.Repository;

@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.DocumentTableId)
@Html.HiddenFor(model => model.ListAgreement)
@Html.HiddenFor(model => model.Parallel)
@Html.HiddenFor(model => model.NeedTranslate)

@if (User.IsInRole("Administrator"))
{
    <div class="editor-label">
        @Html.LabelForRequired(model => Model.OutcomingDocNum)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => Model.OutcomingDocNum, new { @class = "form-control", @size = 256, placeholder = "Номер" })
    </div>
    <div class="editor-label">
        @Html.LabelForRequired(model => Model.ItemCauseNumberCode)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => Model.ItemCauseNumberCode, new { @class = "form-control", @size = 256, placeholder = "Код номенклатурного дела" })
    </div>
}
else
{
    @Html.HiddenFor(model => model.OutcomingDocNum)
    @Html.HiddenFor(model => model.ItemCauseNumberCode)
}

<div class="row">
    <div class="col-xs-8">
        <div class="editor-label">
            @Html.LabelFor(model => model.ItemCauseNumber)
        </div>
        <div class="row">
            <div class="col-xs-2">
                <div class="editor-field">
                    <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target=".itemcause-modal">@UIElementRes.UIElement.Choose...</button>
                </div>
            </div>
            <div class="col-xs-10">
                @Html.HiddenFor(model => Model.ItemCauseTableId)
                @Html.HiddenFor(model => Model.ItemCauseNumber, new { id = "ItemCauseNumberTextId" })
                <span id="ItemCauseNumber">@Html.DisplayTextFor(model => Model.ItemCauseNumber)</span>
            </div>
        </div>
    </div>
</div>

<h4>Язык обращения:</h4>
<div class="row">
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Language_Kazakh)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Language_Kazakh)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Language_Russian)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Language_Russian)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Language_English)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Language_English)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Language_Chinese)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Language_Chinese)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Language_French)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Language_French)
        </div>
    </div>
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.Language_Other)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Language_Other)
        </div>
    </div>
</div>
<br />

<div class="row">
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => model.OrganizationTableId)
        </div>
        <div class="editor-field">
            @Html.Action("GetOrganizationORD", "Custom", new { @id = Model.OrganizationTableId })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-4">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.OutgoingDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.OutgoingDate, UIElementRes.UIElement.DATEFORMAT, new { @class = "datepicker form-control", startDate = "" })
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.OutcomingDispatchType):
        </div>
    </div>
    <div class="col-xs-3">
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => Model.OutcomingDispatchType, new { @class = "selectpickerfull" })
        </div>
    </div>
    <div class="col-xs-4">
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.DispatchType, new { @class = "form-control", placeholder = "Другое" })
        </div>
    </div>
</div>
<br />

<div class="editor-label">
    @Html.LabelForRequired(model => Model.Signer)
</div>
<div>
    @Html.TextBoxFor(model => Model.Signer, new { @class = "form-control", @data_role = "tagsinputEmployerOne", @size = 256, placeholder = "За подписью" })
</div>
<hr />

<div class="editor-label">
    @Html.LabelForRequired(model => Model.Priority)
</div>
<div class="editor-field">
    @Html.EnumDropDownListFor(model => Model.Priority, new { @class = "selectpicker" })
</div>
<div class="editor-label">
    @Html.LabelForRequired(model => Model.BlankNumber)
</div>
<div>
    @Html.TextBoxFor(model => Model.BlankNumber, new { @class = "form-control", placeholder = "Номер бланка" })
</div>

<div class="editor-label">
    @Html.LabelForRequired(model => Model.IncomingNumberDocId)
</div>
<div class="editor-field">
    @Html.Action("GetIncomingDoc", "Custom", new { @id = Model.IncomingNumberDocId })
</div>

<br />
<div class="row">
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelForRequired(model => Model.DocumentType):
        </div>
    </div>
    <div class="col-xs-3">
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => Model.DocumentType, new { @class = "selectpickerfull" })
        </div>
    </div>
    <div class="col-xs-4">
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.DocumentTypeName, new { @class = "form-control", placeholder = "Другое" })
        </div>
    </div>
</div>
<hr />
<div class="editor-label">
    @Html.LabelForRequired(model => Model.ListsCount)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => Model.ListsCount, new { @class = "form-control", placeholder = "Количество листов" })
</div>

<div class="editor-label">
    @Html.LabelForRequired(model => Model.ApplicationsCount)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => Model.ApplicationsCount, new { @class = "form-control", placeholder = "Количество приложений" })
</div>

<div class="editor-label">
    @Html.LabelForRequired(model => Model.DocumentSubject)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => Model.DocumentSubject, new { @class = "form-control", placeholder = "Тема документа" })
</div>

<div class="editor-label">
    <div class="editor-label">
        @Html.LabelForRequired(model => Model.Content)
    </div>
    <div>
        @Html.TextAreaFor(model => Model.Content, new { @class = "form-control summernotemin", placeholder = "" })
    </div>
</div>

<div class="modal itemcause-modal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sidebar">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">@CustomRes.Custom.ItemCause</h4>
            </div>
            <div class="modal-body" style="min-height:700px;">
                @Html.Action("ItemCausesListLookup", "ItemCause")
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
        $(function () {
            $('.itemcauseslink').click(function (event) {
                var element = $(event.target);
                $('#ItemCauseTableId').val(element.attr('data-itemid'));
                $('#ItemCauseNumber').text(element.text());
                $('#ItemCauseNumberTextId').val(element.text());
            });

            $('#OutcomingDispatchType').change(function (event) {
                if ($('#OutcomingDispatchType').val() == 0) {
                    $('#DispatchType')[0].disabled = false;
                }
                else {
                    $('#DispatchType')[0].disabled = true;
                    $('#DispatchType').val("");
                }
            });

            $('#DocumentType').change(function (event) {
                var amount = $('#DocumentType').val();
                if ($('#DocumentType').val() == 0) {
                    $('#DocumentTypeName')[0].disabled = false;
                }
                else {
                    $('#DocumentTypeName')[0].disabled = true;
                    $('#DocumentTypeName').val("");
                }
            });
        });
</script>

