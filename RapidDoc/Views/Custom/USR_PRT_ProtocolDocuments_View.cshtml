@model RapidDoc.Models.ViewModels.USR_PRT_ProtocolDocuments_View
@using RapidDoc.Extensions;

<h4 class="text-center"><strong>ПРОТОКОЛ: @Html.DisplayTextFor(x => x.Code)</strong></h4>
<h4 class="text-center">Тема: @Html.DisplayTextFor(x => x.Subject)</h4>
<br />
<div class="row">
    <div class="col-xs-6">
        <div class="editor-label">
            <div class="editor-label">
                @Html.LabelFor(x => x.ProtocolFoldersTableId):
            </div>
            <div class="editor-field">
                @Html.Action("GetPRTFolderORD", "Custom", new { @processId = ViewBag.ProcessId, id = Model.ProtocolFoldersTableId, selected = true })
            </div>
        </div>
    </div>
    <div class="col-xs-6">
        <div class="editor-label">
            @Html.LabelFor(x => x.Location):
        </div>
        <div class="editor-field">
            @Html.DisplayTextFor(x => x.Location)
        </div>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-xs-6">
        <div class="editor-label">

        </div>
    </div>
    <div class="col-xs-6">
        
    </div>
</div>
<hr />
<div class="row">
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelFor(x => x.Agenda):
        </div>
    </div>
    <div class="col-xs-10">
        <div class="editor-field">
            <p><strong><span style="white-space: pre-line">@Html.Raw(Model.Agenda)</span></strong></p>
        </div>
    </div>
</div>
@if(!String.IsNullOrEmpty(Model.Introduction))
{ 
<div class="row">
    <div class="col-xs-2">
        <div class="editor-label">
            @Html.LabelFor(x => x.Introduction):
        </div>
    </div>
    <div class="col-xs-10">
        <div class="editor-field">
            <p><span style="white-space: pre-line">@Html.Raw(Model.Introduction)</span></p>
        </div>
    </div>
</div>
}

<div class="row visible-sm-block visible-md-block visible-lg-block">
    <div class="col-xs-1">
        @Html.LabelFor(model => Model.Attended)
    </div>
    <div class="col-xs-11">
        @Html.DisplayTextFor(model => Model.Attended)
    </div>
</div>
<div class="row visible-xs-block">
    <div class="col-xs-2">
        @Html.LabelFor(model => Model.Attended)
    </div>
    <div class="col-xs-10">
        @Html.DisplayTextFor(model => Model.Attended)
    </div>
</div>
<div class="row visible-sm-block visible-md-block visible-lg-block">
    <div class="col-xs-1">
        @Html.LabelFor(model => Model.Invited)
    </div>
    <div class="col-xs-11">
        @Html.DisplayTextFor(model => Model.Invited)
    </div>
</div>
<div class="row visible-xs-block">
    <div class="col-xs-2">
        @Html.LabelFor(model => Model.Invited)
    </div>
    <div class="col-xs-10">
        @Html.DisplayTextFor(model => Model.Invited)
    </div>
</div>
<div class="row visible-sm-block visible-md-block visible-lg-block">
    <div class="col-xs-1">
        @Html.LabelFor(model => Model.Absent)
    </div>
    <div class="col-xs-11">
        @Html.DisplayTextFor(model => Model.Absent)
    </div>
</div>
<div class="row visible-xs-block">
    <div class="col-xs-2">
        @Html.LabelFor(model => Model.Absent)
    </div>
    <div class="col-xs-10">
        @Html.DisplayTextFor(model => Model.Absent)
    </div>
</div>
<div class="row visible-sm-block visible-md-block visible-lg-block">
    <div class="col-xs-1">
        @Html.LabelFor(model => Model.Chairman)
    </div>
    <div class="col-xs-11">
        @Html.DisplayTextFor(model => Model.Chairman)
    </div>
</div>
<div class="row visible-xs-block">
    <div class="col-xs-2">
        @Html.LabelFor(model => Model.Chairman)
    </div>
    <div class="col-xs-10">
        @Html.DisplayTextFor(model => Model.Chairman)
    </div>
</div>

<div class="row">
    <div class="col-xs-2">
        <strong>Список вопросов:</strong>
    </div>
    <div class="col-xs-10">
        @if (Model.QuestionList != null && Model.QuestionList.Count() > 0)
        {
            foreach (var question in Model.QuestionList)
            {
                Html.RenderPartial("~/Views/Custom/_QuestionListView.cshtml", question);
            }
        }
    </div>
</div>