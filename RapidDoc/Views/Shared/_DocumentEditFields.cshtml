@model object
@using RapidDoc.Extensions
@{
    var fieldName = (string)ViewData["FieldName"];
}

@{ int index = 0; }
@foreach (var property in Model.VisibleProperties())
{
    if (((string)property.Name) != null && fieldName != null && !String.IsNullOrEmpty(fieldName) && ((string)property.Name) != fieldName)
    {
        continue;
    }
    
    object dataTypeAttr = property.GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.DataTypeAttribute), false).FirstOrDefault();
    <div class="editor-label">
        @Html.LabelRequired((string)property.Name)
    </div>
    
    if(property.PropertyType == typeof(string))
    {
        if ((string)property.Name == "Users" || (string)property.Name == "FromUsers" || (string)property.Name == "UserChooseManual2" || (string)property.Name == "UserChooseManual3" || (string)property.Name == "UserChooseManual4" || (string)property.Name == "UserChooseManual5" || (string)property.Name == "UserChooseManual6" || (string)property.Name == "UserChooseManual7" || (string)property.Name == "UserChooseManual8" || (string)property.Name == "UserChooseManual9")
        {
            <div class="editor-field">
                @Html.TextBox((string)property.Name, null, new { @class = "form-control", @data_role = "tagsinputEmpl", placeholder = "Имя Фамилия" })
            </div>
        }
        else if ((string)property.Name == "ToUsers")
        {
            <div class="editor-field">
                @Html.TextBox((string)property.Name, null, new { @class = "form-control", @data_role = "tagsinputEmpl2", placeholder = "Имя Фамилия" })
            </div>
        }
        else if ((string)property.Name == "UserChooseManual1")
        {
            <div class="editor-field">
                @Html.TextBox((string)property.Name, null, new { @class = "form-control", @data_role = "tagsinputEmpl3", placeholder = Html.DisplayName((string)property.Name) })
            </div>
        }
        else
        {
            if (dataTypeAttr != null && ((System.ComponentModel.DataAnnotations.DataTypeAttribute)dataTypeAttr).DataType == System.ComponentModel.DataAnnotations.DataType.MultilineText)
            {
                <div class="editor-field">
                    @if(index == 0)
                    { 
                        @Html.TextArea((string)property.Name, null, new { @class = "form-control", @row = 5, placeholder = Html.DisplayName((string)property.Name), @autofocus = "required" })
                    }
                    else
                    {
                        @Html.TextArea((string)property.Name, null, new { @class = "form-control", @row = 5, placeholder = Html.DisplayName((string)property.Name) })
                    }
                </div>
            }
            else
            { 
                <div class="editor-field">
                    @if(index == 0)
                    { 
                        @Html.TextBox((string)property.Name, null, new { @class = "form-control", placeholder = Html.DisplayName((string)property.Name), @autofocus = "required" })
                    }
                    else
                    {
                        @Html.TextBox((string)property.Name, null, new { @class = "form-control", placeholder = Html.DisplayName((string)property.Name) })
                    }
                </div>
            }
        }
    }
    else if (property.PropertyType == typeof(DateTime?))
    {
        if (dataTypeAttr == null)
        {
            <div class="editor-field">
                @Html.TextBox((string)property.Name, null, new { @class = "datepicker form-control form-control-date", data_date_format = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern.ToLower(), format = "mm/dd/yyyy", placeholder = "Дата", startDate = "" })
            </div>
        }
        else 
        {
            if(((System.ComponentModel.DataAnnotations.DataTypeAttribute)dataTypeAttr).DataType == System.ComponentModel.DataAnnotations.DataType.Date)
            {
                <div class="editor-field">
                    @Html.TextBox((string)property.Name, null, new { @class = "datepicker form-control form-control-date", data_date_format = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern.ToLower(), format = "mm/dd/yyyy", placeholder = "Дата", startDate = "" })
                </div>
            }
            else if (((System.ComponentModel.DataAnnotations.DataTypeAttribute)dataTypeAttr).DataType == System.ComponentModel.DataAnnotations.DataType.DateTime)
            {
                <div class="editor-field">
                    @Html.TextBox((string)property.Name, null, new { @class = "datetimepicker form-control form-control-date", placeholder = "Дата/время", startDate = "" })
                </div>
            }
            
        }    
    }
    else if (property.PropertyType == typeof(int))
    {
        <div class="editor-field">
            @Html.TextBox((string)property.Name, null, new { @class = "form-control bfh-number" })
        </div>
    }
    else if (property.PropertyType.IsEnum)
    {
        <div class="editor-field">
            @Html.EnumDropDownList((string)property.PropertyType.FullName, (string)property.Name, new { @class = "selectpicker" })
        </div>
    }
    else if (property.PropertyType == typeof(bool))
    {
        <div class="editor-field">
            @Html.CheckBox((string)property.Name)
        </div>
    }
    else if (property.PropertyType == typeof(TimeSpan))
    {
        <div class="bootstrap-timepicker editor-field">
            @Html.TextBox((string)property.Name, null, new { @class = "timepicker" })
            <span class="add-on"><i class="glyphicon glyphicon-time"></i></span>
        </div>
    }

    index++;
}