@model RapidDoc.Models.ViewModels.DepartmentView
@using RapidDoc.Extensions;

@{
    ViewBag.Title = UIElementRes.UIElement.Edit;
}

<h2>@UIElementRes.UIElement.Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend></legend>

        <div class="editor-label">
            @Html.LabelForRequired(model => model.DepartmentName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.DepartmentName, new { @class = "form-control", @size = 70, @maxlength = 70, placeholder = "IT Department", @autofocus = "required", @x_webkit_speech = "" })
            @Html.ValidationMessageFor(model => model.DepartmentName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ParentDepartmentName)
        </div>
        <div class="editor-field">
            @Html.DropDownList("ParentDepartmentId", (IEnumerable<SelectListItem>)ViewBag.DepartmentList, new { @class = "selectpicker", @data_live_search = "true", @data_size = "10" })
            @Html.ValidationMessageFor(model => model.ParentDepartmentId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RequiredRoles)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.RequiredRoles, new { @class = "form-control", @data_role = "tagsinputRoles", @size = 256, @maxlength = 256, placeholder = "Необходиые роли" })
        </div>

        @{Html.RenderPartial("SaveBackBtn");}
    </fieldset>
}



@section Scripts {
    @Scripts.Render("~/bundles/editentity")
}
@section jslaunch {
<script type="text/javascript">
    $(function () {
        selectpicker_init();
        custom_tagsinputRoles_init("@Url.Action("JsonRoles", "Custom")");
});
</script>
}
