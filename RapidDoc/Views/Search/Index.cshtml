@model RapidDoc.Models.ViewModels.SearchFormView
@using RapidDoc.Extensions;

@{
    ViewBag.Title = UIElementRes.UIElement.Search;
    int searchNumber = ViewBag.SearchResult != null ? ViewBag.SearchCount : 0;
}
<br>
@using (Html.BeginForm())
{
    <div class="form-group">
        @Html.TextBoxFor(model => model.SearchText, new { @class = "form-control", @size = 256, @maxlength = 256, placeholder = UIElementRes.UIElement.SearchText, @autofocus = "required", @x_webkit_speech = "" })
    </div>
    <a data-toggle="collapse" href="#collapseSettings" aria-expanded="false" aria-controls="collapseSettings">@UIElementRes.UIElement.AddonSettings</a>
    <div class="collapse" id="collapseSettings">
        <div class="well">
            <div class="row">
                <div class="col-xs-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.StartDate)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.StartDate, "{0:dd.MM.yyyy}", new { @class = "datepicker form-control", data_date_format = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern.ToLower(), format = "mm/dd/yyyy", placeholder = FieldNameRes.FieldNameResource.StartDate, startDate = "" })
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.EndDate)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.EndDate, "{0:dd.MM.yyyy}", new { @class = "datepicker form-control", data_date_format = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern.ToLower(), format = "mm/dd/yyyy", placeholder = FieldNameRes.FieldNameResource.EndDate, startDate = "" })
                    </div>
                </div>
                <div class="col-xs-9">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.CompanyTableId)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("CompanyTableId", (IEnumerable<SelectListItem>)ViewBag.CompanyList, new { @class = "selectpicker selectpickerfull", @data_live_search = "true", @data_size = "10" })
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ProcessTableId)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("ProcessTableId", (IEnumerable<SelectListItem>)ViewBag.ProcessList, new { @class = "selectpicker selectpickerfull", @data_live_search = "true", @data_size = "10" })
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.CreatedEmplTableId)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("CreatedEmplTableId", (IEnumerable<SelectListItem>)ViewBag.EmplList, new { @class = "selectpicker selectpickerfull", @data_live_search = "true", @data_size = "10" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <p>
        <input class="btn btn-primary btn-sm pull-right" type="submit" value=@UIElementRes.UIElement.Search />
    </p>
}

<br>
<br>
@if (ViewBag.SearchResult != null)
{
    <div>@(searchNumber > 0 ? UIElementRes.UIElement.SearchResultText + searchNumber.ToString() : "")</div>
    foreach (var item in ViewBag.SearchResult)
    {
        if (item.isShow == true)
        {
            <div class="bs-callout bs-callout-info">
                <h4>
                    @Html.ActionLink((string)item.DocumentNum, "ShowDocument", "Document", new { id = item.DocumentTableId, company = item.AliasCompanyName, isAfterView = true }, null)
                </h4>
                <p>@(((string)item.DocumentText).Length > 4048 ? ((string)item.DocumentText).Substring(0, 4048) + " ..." : item.DocumentText)</p>
                <h6 class="pull-right">@item.CreatedUserName</h6>
            </div>
        }
        else
        {
            <div class="bs-callout bs-callout-danger">
                <h4>
                    @item.DocumentNum
                </h4>
                <p>@UIElementRes.UIElement.NoAccess</p>
                <h6 class="pull-right">@item.CreatedUserName</h6>
            </div>
        }
    }
}
<div id="searchAjaxResult"></div>

<div id="loadingDiv"
     style="text-align: center; display: none; margin-bottom: 20px;">
    <img alt="Loading"
         src="@Url.Content("~/Content/Custom/image-icon/autoload.gif")" />
</div>

@section Scripts {
    @Scripts.Render("~/bundles/editentity")
}
@section jslaunch {
<script type="text/javascript">
$(function () {
    selectpickerfull_init();
    datepicker_init("@UIElementRes.UIElement.LangName");

    var blockNumber = 2;
    var NoMoreData = false;
    var inProgress = false;
    var searchText = $("#SearchText").val();
    var startDate = $("#StartDate").val();
    var endDate = $("#EndDate").val();
    var companyTableId = $("#CompanyTableId").val();
    var processTableId = $("#ProcessTableId").val();
    var createdEmplTableId = $("#CreatedEmplTableId").val();

    $('input').keydown(function(e) {
    if (e.keyCode == 13) {
    $(this).closest('form').submit();
    }
    });

    $(window).scroll(function () {
        if ($(window).scrollTop() == $(document).height() - $(window).height() && !NoMoreData && inProgress == false)
    {
    inProgress = true;
    $("#loadingDiv").show();
    $.post("@Url.Action("InfinateScroll", "Search")", {
        BlockSize: blockNumber, SearchText: searchText,
        StartDate: startDate, EndDate: endDate, CompanyTableId: companyTableId,
        ProcessTableId: processTableId, CreatedEmplTableId: createdEmplTableId
    },
    function (data) {

        blockNumber = blockNumber + 1;
        NoMoreData = data.NoMoreData;
        $("#searchAjaxResult").append(data.HTMLString);
        $("#loadingDiv").hide();
        inProgress = false;
    });
}
    });

    function clearTextSearch(result) {
        $('#SearchText').val(searchText);
    }
});
</script>
}
