@model RapidDoc.Models.ViewModels.DepartmentView
@using RapidDoc.Extensions;

@{
    ViewBag.Title = UIElementRes.UIElement.Monitoring;
}
<h1>@UIElementRes.UIElement.Monitoring: Исполнение по подразделениям</h1>
<hr />

<div class="editor-label">
    @Html.LabelFor(model => model.DepartmentName)
</div>
<div class="editor-field">
    @Html.DropDownList("DepartmentTableId", (IEnumerable<SelectListItem>)ViewBag.DepartmentList, new { @class = "selectpicker", @data_live_search = "true", @data_size = "10" })
    @Html.ValidationMessageFor(model => model.Id)
</div>

<div class="row">
    <div class="col-md-8">       
        <canvas id="canvasBar" height="400" width="600"></canvas>
    </div>
</div>
<style type="text/css">
    .pie-legend li span {
        width: 1em;
        height: 1em;
        display: inline-block;
        margin-right: 5px;
    }

    .pie-legend {
        list-style: none;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/chart")
@Scripts.Render("~/bundles/editentity")
}
@section jslaunch {

$(function () {
    
    var myBar;
    LoadChart();
    $("[id*=DepartmentTableId]").bind("change", function () {
        LoadChart();
    });

function LoadChart() {
            selectpicker_init();
            var department = $("#DepartmentTableId").val();

            
            $.getJSON('@Url.Action("PerformanceDepartment", "Monitoring")', {departmentString: department}).done(function(data) {
            
            if (myBar != null)
            {
                myBar.destroy();
            }
            var barChartData = {
            labels : data.barLabels,
            datasets : [
            {
            fillColor : "#46BFBD",
            strokeColor : "#46BFBD",
            "#F7464A": "rgba(220,220,220,0.75)",
            highlightStroke: "rgba(220,220,220,1)",
            data : data.barDataCount
            },
            {
            fillColor : "#F7464A",
            strokeColor : "#F7464A",
            highlightFill : "rgba(151,187,205,0.75)",
            highlightStroke : "rgba(151,187,205,1)",
            data : data.barDataErrorCount
            }
            ]
            }

            var ctxBar = document.getElementById("canvasBar").getContext("2d");
            myBar = new Chart(ctxBar).Bar(barChartData, {
            responsive : true
            });

            });
    }
}
    );
}




