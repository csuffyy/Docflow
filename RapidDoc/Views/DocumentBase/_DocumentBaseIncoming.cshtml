@model List<RapidDoc.Models.ViewModels.DocumentBaseView>
@using RapidDoc.Extensions;
@{
    Layout = null;

}
<p><a href="#" class="btn btn-default openall"><span class="glyphicon glyphicon glyphicon-plus" aria-hidden="true"></span></a> <a href="#" class="btn btn-default closeall"><span class="glyphicon glyphicon glyphicon-minus" aria-hidden="true"></span></a></p>
<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
    @{int num = 0; string num1;}
    @switch ((RapidDoc.Models.Repository.IncomingFilterType)Enum.ToObject(typeof(RapidDoc.Models.Repository.IncomingFilterType), @ViewBag.FilterType))
    {

        case RapidDoc.Models.Repository.IncomingFilterType.Initiator:

            foreach (var itemGroup in Model.GroupBy(x => x.UserName).OrderBy(x => x.Key))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key (@Model.Where(x => x.UserName == itemGroup.Key).Count())</strong></a></p>
                    </div>
                    <div class="panel-collapse collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.UserName == itemGroup.Key).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    @if (item.Executed == true)
                                    {
                                        <span class="fa fa-check text-success"></span>
                                    }
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins></a> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)
                                </p>
                                <br />
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.IncomingFilterType.Department:
            foreach (var itemGroup in Model.GroupBy(x => x.DepartmentName).OrderBy(x => x.Key))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key (@Model.Where(x => x.DepartmentName == itemGroup.Key).Count())</strong></a></p>
                    </div>
                    <div class="panel-collapse collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var itemGroupName in Model.Where(x => x.DepartmentName == itemGroup.Key).GroupBy(y => y.UserName).OrderBy(x => x.Key))
                            {
                                num1 = itemGroupName.Key.Replace(" ", String.Empty);
                                <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                                    <div class="panel panel-default">
                                        <div class="panel-heading" role="tab" id="heading@num1@num">
                                            <p class="panel-title">
                                                <a data-toggle="collapse" data-target="#collapseArea_@num1@num" aria-expanded="false" aria-controls="collapseArea_@num1@num">
                                                    <strong>@itemGroupName.Key</strong>
                                                </a>
                                            </p>
                                        </div>
                                        <div class="collapse" id="collapseArea_@num1@num">
                                            <div class="panel-body">


                                                @foreach (var item in Model.Where(x => x.DepartmentName == itemGroup.Key && x.UserName == itemGroupName.Key).OrderByDescending(x => x.CreatedDate))
                                                {
                                                    <p>
                                                        @if (item.Executed == true)
                                                        {
                                                            <span class="fa fa-check text-success"></span>
                                                        }
                                                        <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins></a> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)
                                                    </p>
                                                    <br />
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.IncomingFilterType.Topic:
            foreach (var itemGroup in Model.GroupBy(x => x.DocumentTitle).OrderBy(x => x.Key))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key</strong></a></p>
                    </div>
                    <div class="panel-collapse collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.DocumentTitle == itemGroup.Key).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    @if (item.Executed == true)
                                    {
                                        <span class="fa fa-check text-success"></span>
                                    }
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins></a> - @item.ProcessName - @item.DocumentText (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)
                                </p>
                                <br />
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.IncomingFilterType.RegistrationNumber:
            foreach (var itemGroup in Model.GroupBy(x => x.OrderNumber).Where(y => !String.IsNullOrEmpty(y.Key)).OrderBy(c => c.Key.Length).ThenBy(c => c.Key))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key</strong></a></p>
                    </div>
                    <div class="panel-collapse collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.OrderNumber == itemGroup.Key).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    @if (item.Executed == true)
                                    {
                                        <span class="fa fa-check text-success"></span>
                                    }
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins></a> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)
                                </p>
                                <br />
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.IncomingFilterType.RegistrationDate:
            foreach (var itemGroup in Model.Where(x => x.OrderDate != null ).GroupBy(x => x.Year).OrderBy(x => x.Key))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key</strong></a></p>
                    </div>
                    <div class="panel-collapse collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var itemGroupName in Model.Where(x => x.OrderDate != null && x.Year == itemGroup.Key).GroupBy(y => new { y.Month, y.MonthNumber }).OrderBy(x => x.Key.MonthNumber))
                            {
                                <div class="panel-group" id="headingTwo@num" role="tablist" aria-multiselectable="true">
                                    <div class="panel panel-default">
                                        <div class="panel-heading" role="tab" id="headingTwo@num@itemGroupName.Key.Month">
                                            <p class="panel-title">
                                                <a data-toggle="collapse" data-target="#collapseArea_@num@itemGroup.Key@itemGroupName.Key.MonthNumber" aria-expanded="false" aria-controls="collapseArea_@num@itemGroup.Key@itemGroupName.Key.MonthNumber">
                                                    <strong>@itemGroupName.Key.Month</strong>
                                                </a>
                                            </p>
                                        </div>
                                        <div class="collapse" id="collapseArea_@num@itemGroup.Key@itemGroupName.Key.MonthNumber">
                                            <div class="panel-body">
                                                @foreach (var itemGroupTwoName in Model.Where(x => x.OrderDate != null && x.Year == itemGroup.Key && x.MonthNumber == itemGroupName.Key.MonthNumber).GroupBy(y => y.OrderDate).OrderBy(x => x.Key))
                                                {
                                                    <div class="panel-group" id="headingThree@num" role="tablist" aria-multiselectable="true">
                                                        <div class="panel panel-default">
                                                            <div class="panel-heading" role="tab" id="headingThree@num@itemGroupTwoName.Key">
                                                                <p class="panel-title">
                                                                    <a data-toggle="collapse" data-target="#collapseArea_@Html.FormatValue(itemGroupTwoName.Key, "{0:ddMMyyyy}")" aria-expanded="false" aria-controls="collapseArea_@Html.FormatValue(itemGroupTwoName.Key, "{0:ddMMyyyy}")">
                                                                        <strong>@Html.FormatValue(itemGroupTwoName.Key, "{0:dd.MM.yyyy}") (@Model.Where(x => x.OrderDate == itemGroupTwoName.Key).Count())</strong>
                                                                    </a>
                                                                </p>
                                                            </div>
                                                            <div class="collapse" id="collapseArea_@Html.FormatValue(itemGroupTwoName.Key, "{0:ddMMyyyy}")">
                                                                <div class="panel-body">
                                                                    @foreach (var item in Model.Where(x => x.OrderDate == itemGroupTwoName.Key).OrderByDescending(x => x.CreatedDate))
                                                                    {
                                                                        <p>
                                                                            @if (item.Executed == true)
                                                                            {
                                                                                <span class="fa fa-check text-success"></span>
                                                                            }
                                                                            <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins></a> @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)
                                                                        </p>
                                                                        <br />
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.IncomingFilterType.Organization:
            foreach (var itemGroup in Model.GroupBy(x => x.InOutOrganization).Where(y => !String.IsNullOrEmpty(y.Key)).OrderBy(x => x.Key))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key</strong></a></p>
                    </div>
                    <div class="panel-collapse collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.InOutOrganization == itemGroup.Key).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins></a> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)
                                </p>
                                <br />
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.IncomingFilterType.ItemCase:
            foreach (var itemGroup in Model.GroupBy(x => new { ItemCaseNumber = x.ItemCaseNumber, ItemCaseName = x.ItemCaseName }).OrderBy(x => x.Key.ItemCaseNumber))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key.ItemCaseNumber - @itemGroup.Key.ItemCaseName (@Model.Where(x => x.ItemCaseNumber == itemGroup.Key.ItemCaseNumber).Count())</strong></a></p>
                    </div>
                    <div class="panel-collapse collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.ItemCaseNumber == itemGroup.Key.ItemCaseNumber).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins></a> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)
                                </p>
                                <br />
                            }
                        </div>
                    </div>
                </div>
            }
            break;
    }
</div>

<script type="text/javascript">
    $('.closeall').click(function () {
        $('.panel-collapse.in')
          .collapse('hide');
    });
    $('.openall').click(function () {
        $('.panel-collapse:not(".in")')
          .collapse('show');
    });
</script>



