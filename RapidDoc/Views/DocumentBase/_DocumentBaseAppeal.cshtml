@model List<RapidDoc.Models.ViewModels.DocumentBaseView>
@using RapidDoc.Extensions;
@{
    Layout = null;

}
<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
    @{int num = 0;}
    @switch ((RapidDoc.Models.Repository.AppealFilterType)Enum.ToObject(typeof(RapidDoc.Models.Repository.AppealFilterType), @ViewBag.FilterType))
    {

        case RapidDoc.Models.Repository.AppealFilterType.Initiator:

            foreach (var itemGroup in Model.GroupBy(x => x.UserName))
            {

                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key (@Model.Where(x => x.UserName == itemGroup.Key).Count())</strong></a></p>
                    </div>
                    <div class="panel-collapse collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.UserName == itemGroup.Key).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    @if (item.Executed == true)
                                    {
                                        <span class="fa fa-check text-success"></span>
                                    }
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.AppealFilterType.RegistrationNumber:
            foreach (var itemGroupProcess in Model.Where(x => x.OrderNumber != null).GroupBy(x => x.ProcessName))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroupProcess.Key</strong></a></p>
                    </div>
                    <div class="collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var itemGroup in Model.Where(x => x.ProcessName == itemGroupProcess.Key).GroupBy(x => x.OrderNumber).Where(y => !String.IsNullOrEmpty(y.Key)).OrderBy(x => x.Key))
                            {
                                <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                                    <div class="panel panel-default">
                                        <div class="panel-heading" role="tab" id="heading@itemGroup.Key@num">
                                            <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@itemGroup.Key@num" aria-expanded="false" aria-controls="collapseArea_@itemGroup.Key@num"><strong>@itemGroup.Key</strong></a></p>
                                        </div>
                                        <div class="collapse" id="collapseArea_@itemGroup.Key@num">
                                            <div class="panel-body">
                                                @foreach (var item in Model.Where(x => x.OrderNumber == itemGroup.Key && x.ProcessName == itemGroupProcess.Key).OrderByDescending(x => x.CreatedDate))
                                                {
                                                    <p>
                                                        @if (item.Executed == true)
                                                        {
                                                            <span class="fa fa-check text-success"></span>
                                                        }
                                                        <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                                    </p>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.AppealFilterType.RegistrationDate:

            foreach (var itemGroup in Model.Where(y => y.OrderDate != null).GroupBy(x => x.OrderDate))
            {

                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@Html.FormatValue(itemGroup.Key, "{0:dd.MM.yyyy}") (@Model.Where(x => x.OrderDate == itemGroup.Key).Count())</strong></a></p>
                    </div>
                    <div class="panel-collapse collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.OrderDate == itemGroup.Key).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    @if (item.Executed == true)
                                    {
                                        <span class="fa fa-check text-success"></span>
                                    }
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.AppealFilterType.Topic:
            foreach (var itemGroup in Model.GroupBy(x => x.DocumentTitle))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key</strong></a></p>
                    </div>
                    <div class="collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.DocumentTitle == itemGroup.Key).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    @if (item.Executed == true)
                                    {
                                        <span class="fa fa-check text-success"></span>
                                    }
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> - @item.ProcessName - @item.DocumentText (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.AppealFilterType.Organization:
            foreach (var itemGroup in Model.GroupBy(x => x.InOutOrganization))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key</strong></a></p>
                    </div>
                    <div class="collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.InOutOrganization == itemGroup.Key).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    @if (item.Executed == true)
                                    {
                                        <span class="fa fa-check text-success"></span>
                                    }
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.AppealFilterType.ItemCase:
            foreach (var itemGroup in Model.GroupBy(x => new { ItemCaseNumber = x.ItemCaseNumber, ItemCaseName = x.ItemCaseName }))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key.ItemCaseNumber - @itemGroup.Key.ItemCaseName (@Model.Where(x => x.ItemCaseNumber == itemGroup.Key.ItemCaseNumber).Count())</strong></a></p>
                    </div>
                    <div class="collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.ItemCaseNumber == itemGroup.Key.ItemCaseNumber).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
            break;
    }
</div>



