@model List<RapidDoc.Models.ViewModels.DocumentBaseView>
@using RapidDoc.Extensions;
@{
    Layout = null;

}
<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
    @{int num = 0; int num1 = 0;}
    @switch ((RapidDoc.Models.Repository.OfficeMemoFilterType)Enum.ToObject(typeof(RapidDoc.Models.Repository.OfficeMemoFilterType), @ViewBag.FilterType))
    {

        case RapidDoc.Models.Repository.OfficeMemoFilterType.Initiator:

            foreach (var itemGroup in Model.GroupBy(x => x.UserName).OrderBy(y => y.Key))
            {

                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key (@Model.Where(x => x.UserName == itemGroup.Key).Count())</strong></a></p>
                    </div>
                    <div class="collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.UserName == itemGroup.Key).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.OfficeMemoFilterType.Department:
            foreach (var itemGroup in Model.GroupBy(x => x.DepartmentName))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key (@Model.Where(x => x.DepartmentName == itemGroup.Key).Count())</strong></a></p>
                    </div>
                    <div class="collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var itemGroupName in Model.Where(x => x.DepartmentName == itemGroup.Key).GroupBy(y => y.UserName).OrderBy(x => x.Key))
                            {
                                num1++;
                                <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                                    <div class="panel panel-default">
                                        <div class="panel-heading" role="tab" id="heading@num1@num">
                                            <p class="panel-title">
                                                <a data-toggle="collapse" data-target="#collapseArea_@num1@num" aria-expanded="false" aria-controls="collapseArea_@num1@num">
                                                    <strong>@itemGroupName.Key</strong>
                                                </a>
                                            </p>
                                        </div>
                                        <div class="collapse" id="collapseArea_@num1@num">
                                            <div class="panel-body">
                                                @foreach (var item in Model.Where(x => x.DepartmentName == itemGroup.Key && x.UserName == itemGroupName.Key).OrderByDescending(x => x.CreatedDate))
                                                {
                                                    <p>
                                                        <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                                    </p>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.OfficeMemoFilterType.ItemCase:
            foreach (var itemGroup in Model.GroupBy(x => new { ItemCaseNumber = x.ItemCaseNumber, ItemCaseName = x.ItemCaseName }))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key.ItemCaseNumber - @itemGroup.Key.ItemCaseName (@Model.Where(x => x.ItemCaseNumber == itemGroup.Key.ItemCaseNumber).Count())</strong></a></p>
                    </div>
                    <div class="collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.ItemCaseNumber == itemGroup.Key.ItemCaseNumber).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.OfficeMemoFilterType.Topic:
            foreach (var itemGroup in Model.GroupBy(x => x.DocumentTitle).OrderBy(x => x.Key))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key</strong></a></p>
                    </div>
                    <div class="collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.DocumentTitle == itemGroup.Key).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> - @item.ProcessName (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
            break;
        case RapidDoc.Models.Repository.OfficeMemoFilterType.ProcessName:

            foreach (var itemGroup in Model.GroupBy(x => x.ProcessName))
            {

                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key (@Model.Where(x => x.ProcessName == itemGroup.Key).Count())</strong></a></p>
                    </div>
                    <div class="collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var itemGroupName in Model.Where(x => x.ProcessName == itemGroup.Key).GroupBy(y => y.UserName).OrderBy(x => x.Key))
                            {
                                num1++;
                                <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                                    <div class="panel panel-default">
                                        <div class="panel-heading" role="tab" id="heading@num1@num">
                                            <p class="panel-title">
                                                <a data-toggle="collapse" data-target="#collapseArea_@num1@num" aria-expanded="false" aria-controls="collapseArea_@num1@num">
                                                    <strong>@itemGroupName.Key</strong>
                                                </a>
                                            </p>
                                        </div>
                                        <div class="collapse" id="collapseArea_@num1@num">
                                            <div class="panel-body">

                                            @foreach (var item in Model.Where(x => x.ProcessName == itemGroup.Key && x.UserName == itemGroupName.Key).OrderByDescending(x => x.CreatedDate))
                                            {
                                                <p>
                                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                                </p>
                                            }
                                  </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            break;

        case RapidDoc.Models.Repository.OfficeMemoFilterType.Folder:
            foreach (var itemGroup in Model.GroupBy(x => x.Folder))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@Html.EnumToDescription(itemGroup.Key) (@Model.Where(x => x.Folder == itemGroup.Key).Count())</strong></a></p>
                    </div>
                    <div class="collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.Folder == itemGroup.Key).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
            break;

        case RapidDoc.Models.Repository.OfficeMemoFilterType.CreateDate:
            foreach (var itemGroup in Model.GroupBy(x => x.ModCreatedDate))
            {
                num++;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="heading@num">
                        <p class="panel-title"><a data-toggle="collapse" data-target="#collapseArea_@num" aria-expanded="false" aria-controls="collapseArea_@num"><strong>@itemGroup.Key</strong></a></p>
                    </div>
                    <div class="collapse" id="collapseArea_@num">
                        <div class="panel-body">
                            @foreach (var item in Model.Where(x => x.ModCreatedDate == itemGroup.Key).OrderByDescending(x => x.CreatedDate))
                            {
                                <p>
                                    <a href="@Url.Action("ShowDocument", "Document", new { id = item.Id, isAfterView = true })" target="_blank"><ins>@item.DocumentNum</ins> - @item.ProcessName - @item.DocumentTitle (@item.CreatedDate) => @Html.EnumToDescription(item.DocumentState)</a>
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
            break;
    }
</div>

